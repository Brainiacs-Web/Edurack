<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>PART TEST 01 - All Subjects</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
  <style>
    /* Global styles */
    body {
      background: #e0f2ff;
      margin: 0;
      padding: 20px;
      font-family: 'Poppins', sans-serif;
      color: #333;
    }
    .print-btn {
      margin: 10px auto;
      display: block;
      padding: 10px 20px;
      font-size: 1rem;
      border: none;
      background: #007adf;
      color: #fff;
      border-radius: 4px;
      cursor: pointer;
    }
    /* A4 page style */
    .page {
      width: 210mm;
      min-height: 297mm;
      margin: 0 auto;
      background: #fff;
      padding: 20mm;
      box-shadow: 0 0 5mm rgba(0,0,0,0.1);
      position: relative;
      overflow: hidden;
      z-index: 1;
    }
    @page {
      size: A4;
      margin: 20mm;
    }
    /* Watermark â€“ hidden on screen, shown on print */
    .watermark {
      display: none;
    }
    @media print {
      .watermark {
        display: block;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(-30deg);
        font-size: 100px;
        color: rgba(0, 122, 223, 0.1);
        pointer-events: none;
        z-index: 0;
      }
    }
    /* Header & Footer */
    .header {
      text-align: center;
      margin-bottom: 10mm;
      position: relative;
      z-index: 2;
    }
    .header h1 {
      font-size: 2.5rem;
      margin: 0;
      letter-spacing: 2px;
    }
    .header p {
      margin: 5px 0;
      font-size: 1rem;
    }
    .footer {
      text-align: center;
      font-size: 0.8rem;
      border-top: 1px solid #000;
      padding-top: 5mm;
      position: absolute;
      bottom: 10mm;
      left: 20mm;
      right: 20mm;
      z-index: 2;
    }
    /* Subject Chapters Section */
    .subject-chapters {
      border: 1px solid #000;
      padding: 10px;
      margin-bottom: 10mm;
      font-size: 0.9rem;
      position: relative;
      z-index: 2;
    }
    .subject-chapters h2 {
      text-align: center;
      margin: 0 0 5px;
      font-size: 1.2rem;
      text-decoration: underline;
    }
    .subject-list {
      display: flex;
      justify-content: space-between;
      text-align: center;
      font-weight: 600;
    }
    .subject {
      width: 32%;
    }
    /* Each Subject Section */
    .subject-section {
      margin-bottom: 10mm;
      position: relative;
      z-index: 2;
    }
    .subject-section h2 {
      text-align: left;
      font-size: 1.5rem;
      border-bottom: 2px solid #007adf;
      margin-bottom: 5mm;
      padding-bottom: 2mm;
    }
    /* Questions styling */
    .question-card {
      margin-bottom: 10mm;
      padding-bottom: 10mm;
      border-bottom: 1px dashed #aaa;
      page-break-inside: avoid;
    }
    .question-number {
      font-weight: bold;
      margin-bottom: 5px;
    }
    .question-text {
      margin-bottom: 5px;
    }
    .options .option {
      margin: 3px 0;
    }
    /* Print styles */
    @media print {
      body, .page {
        margin: 0;
        box-shadow: none;
      }
      .print-btn {
        display: none;
      }
    }
  </style>
</head>
<body>
  <!-- Watermark element (only visible on print) -->
  <div class="watermark">edurack</div>

  <!-- Button to print/save as PDF -->
  <button class="print-btn" onclick="window.print()">Print PDF</button>

  <div class="page" id="page">
    <!-- Header Section -->
    <div class="header">
      <h1>PART TEST 01</h1>
      <p>NEET ULTIMATE TEST SERIES</p>
      <p><strong>Rules:</strong> Each correct answer carries 4 marks; 1 mark will be deducted for each incorrect answer.</p>
      <p>Submit your OMR Sheet to: @Edurack_bot</p>
    </div>

    <!-- Subject Chapters Section -->
    <div class="subject-chapters">
      <h2>SUBJECT CHAPTERS</h2>
      <div class="subject-list">
        <div class="subject">
          <p><strong>PHYSICS</strong></p>
          <p>Kinematics, Laws of Motion</p>
        </div>
        <div class="subject">
          <p><strong>CHEMISTRY</strong></p>
          <p>Mole Concept, Structure of Atom, Chemical Bonding</p>
        </div>
        <div class="subject">
          <p><strong>BIOLOGY</strong></p>
          <p>Diversity in the Living World, Structural Organisation, Plant Anatomy</p>
        </div>
      </div>
    </div>

    <!-- Physics Section -->
    <div class="subject-section" id="physicsSection">
      <h2>PHYSICS</h2>
      <div class="questions-list" id="physicsQuestions">
        <!-- Physics questions will load here -->
      </div>
    </div>

    <!-- Chemistry Section -->
    <div class="subject-section" id="chemistrySection">
      <h2>CHEMISTRY</h2>
      <div class="questions-list" id="chemistryQuestions">
        <!-- Chemistry questions will load here -->
      </div>
    </div>

    <!-- Biology Section -->
    <div class="subject-section" id="biologySection">
      <h2>BIOLOGY</h2>
      <div class="questions-list" id="biologyQuestions">
        <!-- Biology questions will load here -->
      </div>
    </div>

    <!-- Footer Section -->
    <div class="footer">
      <p>EDURACK - CRACK WITH CONFIDENCE</p>
      <p>For results, join: <a href="https://t.me/Edurack" target="_blank">https://t.me/Edurack</a></p>
    </div>
  </div>

  <!-- Firebase Integration Script -->
  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";
    import { getFirestore, collection, getDocs } from "https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";

    // Firebase configuration
    const firebaseConfig = {
      apiKey: "AIzaSyDFAzyQGNmOD6bmLnZH9evfL3V-PS4cajA",
      authDomain: "arena-b8996.firebaseapp.com",
      databaseURL: "https://arena-b8996-default-rtdb.firebaseio.com",
      projectId: "arena-b8996",
      storageBucket: "arena-b8996.firebasestorage.app",
      messagingSenderId: "188106766480",
      appId: "1:188106766480:web:801e701f00151448090015"
    };

    // Initialize Firebase and Firestore
    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);

    // Helper function to check if a string is an image URL
    function renderContent(content) {
      if (typeof content === 'string') {
        // Check if the content starts with http:// or https:// and ends with an image extension
        if ((content.startsWith('http://') || content.startsWith('https://')) &&
            content.match(/\.(jpeg|jpg|gif|png|bmp)(\?.*)?$/i)) {
          return `<img src="${content}" alt="Image" style="max-width:100%;"/>`;
        } else {
          return `<p>${content}</p>`;
        }
      }
      return '';
    }

    // Load questions for a given subject and append them to the specified container
    async function loadSubject(subjectName, containerId) {
      const container = document.getElementById(containerId);
      container.innerHTML = "<p>Loading questions...</p>";

      try {
        // Reference the questions subcollection for the subject under "Part01"
        const questionsRef = collection(db, "Questions", "Part01", subjectName);
        const snapshot = await getDocs(questionsRef);

        if (snapshot.empty) {
          container.innerHTML = `<p>No questions found for ${subjectName}.</p>`;
          return;
        }

        let html = "";
        let count = 1;
        snapshot.forEach(doc => {
          const data = doc.data();
          html += `<div class="question-card">`;
          html += `<div class="question-number">${count}.</div>`;
          html += `<div class="question-text">`;
          // If a question text exists, check if it's a URL to an image
          if (data.question) {
            html += renderContent(data.question);
          } else if (data.questionImage) {
            html += `<img src="${data.questionImage}" alt="Question Image" style="max-width:100%;"/>`;
          } else {
            html += `<p><em>No question text provided.</em></p>`;
          }
          html += `</div>`;
          if (data.options && Array.isArray(data.options)) {
            html += `<div class="options">`;
            data.options.forEach((option, index) => {
              html += `<div class="option">(${index + 1}) ${renderContent(option).replace(/<\/?p>/g, '')}</div>`;
            });
            html += `</div>`;
          }
          html += `</div>`;
          count++;
        });
        container.innerHTML = html;
      } catch (error) {
        console.error("Error loading questions for", subjectName, error);
        container.innerHTML = `<p>Error loading questions: ${error.message}</p>`;
      }
    }

    // Load questions for all subjects on page load
    window.addEventListener("DOMContentLoaded", () => {
      loadSubject("Physics", "physicsQuestions");
      loadSubject("Chemistry", "chemistryQuestions");
      loadSubject("Biology", "biologyQuestions");
    });
  </script>
</body>
</html>
